class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums)
    {
        vector<int> res;
        for(int i=0;i<nums.size();i++)
        {
            int n= abs(nums[i]);
            if(nums[n-1]>0)
              nums[n-1]= -nums[n-1];  //Marking negative
        }
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>0)
                res.push_back(i+1);
            
        }
        return res;
    }
};


//Approach 2
class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int> ans;
        int n= nums.size();
        unordered_map<int,bool> mp;
        for(int i=0;i<n;i++)
        {
            mp[nums[i]]=true;
        }
         for(int i=1;i<=n;i++)
         {
         if (mp.find(i)==mp.end())
          ans.push_back(i);
         }
        return ans;
    }
};
